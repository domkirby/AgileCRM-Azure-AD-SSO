<?php
//You need to register an app w/ Azure AD: http://bit.ly/2risbxl | It is best to use the guided setup!

/*

You also need to enable SSO in your Agile Tenant:
Enabling JWT single sign-on in your Agile CRM :

Click on Admin Settings Preferences tabs.
Click on Single Sign-On tab
Enter Remote Login URL, the url where Agile CRM SSO will redirect once SSO enable.
Save to enable SSO
You can disable SSO by deleting above configuration.

If you have issues signing in, go to https://mycompany.agilecrm.com/login/normal to bypass SSO

*/

$azureClientId = ""; //client id generated by microsoft
$azureClientSecret = ""; //client secret generated by microsoft
$azureCallback = ""; //url to this file (eg https://sso.msp.com/agileaad/index.php) (this url needs to be added to your registered tenant)
$yourAADTenantId = ""; //your aad tenant id (instructions: http://bit.ly/2pGrCzM)

$crmSecret = ""; //Your secret generated at  https://YOURORG.agilecrm.com/#sso-login
$crmTenant = ""; //Your agile subdomain (just the first part) (eg https://contoso.agilecrm.com would require this value to be set to Contoso)

//stop editing
/*
Copyright 2017 Dominic Kirby

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/











if(empty($_SERVER['HTTPS'])){
  exit("You need to use SSL");
}
session_start();
require("vendor/autoload.php");
use \Firebase\JWT\JWT;



$provider = new TheNetworg\OAuth2\Client\Provider\Azure([
    'clientId'          => $azureClientId,
    'clientSecret'      => $azureClientSecret,
    'redirectUri'       => $azureCallback
]);

if (!isset($_GET['code'])) {

    // If we don't have an authorization code then get one
    $authUrl = $provider->getAuthorizationUrl();
    $_SESSION['oauth2state'] = $provider->getState();
    header('Location: '.$authUrl);
    exit;

// Check given state against previously stored one to mitigate CSRF attack
} elseif (empty($_GET['state']) || ($_GET['state'] !== $_SESSION['oauth2state'])) {

    unset($_SESSION['oauth2state']);
    exit('Invalid state');

} else {

    // Try to get an access token (using the authorization code grant)
    $token = $provider->getAccessToken('authorization_code', [
        'code' => $_GET['code'],
        'resource' => 'https://graph.microsoft.com',
    ]);

    // Optional: Now you have a token you can look up a users profile data
    try {

        // We got an access token, let's now get the user's details
        $me = $provider->get("me", $token);

        // Use these details to create a new profile
        //printf('Hello %s!', $me['givenName']);

    } catch (Exception $e) {

        // Failed to get user details
        exit('Oh dear...');
    }

    // Use this to interact with an API on the users behalf
    //echo $token->getToken();
    $resourceOwner = $provider->getResourceOwner($token);
    $firstName = $resourceOwner->getFirstName();
    $lastName = $resourceOwner->getLastName();
    $upn = $resourceOwner->getUpn();
    $tenant = $resourceOwner->getTenantId();
    $fullName = "{$firstName} {$lastName}";
    if($tenant != $yourAADTenantId) {
      die("Invalid Tenant");
    } else {
      $crmToken = [
        "name" => $fullName,
        "email" => $upn
      ];

      $jwt = JWT::encode($crmToken, $crmSecret);
      $crmRedirUrl = "https://" . $crmTenant . ".agilecrm.com/access/sso?jwt=" . $jwt;
      session_destroy();
      header("Location: " . $crmRedirUrl);
    }

}
 ?>
